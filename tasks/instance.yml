---

- name: check for existing instances
  ec2_instance_facts:
    profile:        '{{ aws_profile }}'
    aws_access_key: '{{ aws_iam_assume_role_access_key    | default(omit) }}'
    aws_secret_key: '{{ aws_iam_assume_role_secret_key    | default(omit) }}'
    security_token: '{{ aws_iam_assume_role_session_token | default(omit) }}'

    filters:
      instance-state-name:
        ['pending', 'running', 'stopping', 'stopped']
      'tag:Name':        '{{ _aws_ec2_i["hostname"] }}'
      'tag:Environment': '{{ _aws_ec2_i["environment"] }}'
      'tag:Function':    '{{ _aws_ec2_i["function"] }}'
      'tag:RI ID':       '{{ _aws_ec2_i["ri_id"] | default(None) }}'
      'tag:VPC':         '{{ aws_vpc_name }}'
    region: '{{ aws_region }}'
  register: _aws_ec2_existing

- block:

    - name: select an image
      include_tasks: ami.yml

    - name: select a subnet
      include_tasks: subnet.yml

    - name: construct instance user data
      include_tasks: user_data.yml

  when: _aws_ec2_existing.instances | length == 0

- name: clear _aws_ec2_launch from possible earlier launches
  set_fact:
    _aws_ec2_launch:
      changed: False

- block:

    - name: configure Elastic Network Interface
      include_tasks: eni.yml

    - name: launch EC2 instance using configured network interface
      include_tasks: instance_launch.yml
      vars:
        network_interface: '{{ _aws_ec2_eni_id }}'

    - name: set network interface attributes
      include_tasks: eni_attributes.yml
      vars:
        network_interface: '{{ _aws_ec2_eni_id }}'

  when: >
    _aws_ec2_i["eni"] is defined and
    _aws_ec2_i["eni"] and
    _aws_ec2_existing.instances | length == 0

- name: launch EC2 instance
  include_tasks: instance_launch.yml
  vars:
    vpc_subnet_id: '{{ _aws_ec2_subnet | default(omit) }}'
    group: '{{ _aws_ec2_i["group"] | default(omit) }}'
    assign_public_ip: '{{ _aws_ec2_i["assign_public_ip"] | default(omit) }}'
    private_ip: '{{ _aws_ec2_i["private_ip"] | default(omit) }}'
    source_dest_check: '{{ _aws_ec2_i["source_dest_check"] | default(omit) }}'
  when: >
    (_aws_ec2_i["eni"] is not defined or
     not _aws_ec2_i["eni"]) and
    _aws_ec2_existing.instances | length == 0

- name: configure Windows domain join with EC2 Systems Manager
  include_tasks: instance_windows_domain_join.yml
  when: >
    _aws_ec2_launch.changed and
    _aws_ec2_i["windows_domain_join"] is defined and
    _aws_ec2_i["windows_domain_join"]

- name: call optional notifier
  include_tasks: 'roles/{{ notifier_role }}/tasks/main.yml'
  vars:
    message: >
      launched <b>{{ _aws_ec2_i["description"] }} instance</b>
      in <a href="{{ _aws_vpc_url }}">VPC {{ aws_vpc_name }}</a>
    attachments:
      - text: ''
        fields:

          - title: Name
            value: '{{ _aws_ec2_i["hostname"] }}.{{ domain_name }}'
            short: true
          - title: Private IP Address
            value: '{{ _aws_ec2_launch["instances"][0]["private_ip"] }}'
            short: true

          - title: Environment
            value: >
              <a href="https://console.aws.amazon.com/ec2/v2/home?region={{
                aws_region
              }}#Instances:tag:Environment={{
                _aws_ec2_i["environment"]
              }}">{{
                _aws_ec2_i["environment"]
              }}</a>
            short: true
          - title: Function
            value: >
              <a href="https://console.aws.amazon.com/ec2/v2/home?region={{
                aws_region
              }}#Instances:tag:Function={{
                _aws_ec2_i["function"]
              }}">{{
                _aws_ec2_i["function"]
              }}</a>
            short: true

          - title: Instance ID
            value: >
              <a href="https://console.aws.amazon.com/ec2/v2/home?region={{
                aws_region
              }}#Instances:instanceId={{
                _aws_ec2_launch["instance_ids"][0]
              }}">{{
                _aws_ec2_launch["instance_ids"][0]
              }}</a>
            short: true
          - title: Instance Type
            value: >
              <a href="https://console.aws.amazon.com/ec2/v2/home?region={{
                aws_region
              }}#Instances:instanceType={{
                _aws_ec2_launch["instances"][0]["instance_type"]
              }}">{{
                _aws_ec2_launch["instances"][0]["instance_type"]
              }}</a>
            short: true

          - title: Availability Zone
            value: >
              <a href="https://console.aws.amazon.com/ec2/v2/home?region={{
                aws_region
              }}#Instances:availabilityZone={{
                _aws_ec2_launch["instances"][0]["placement"]
              }}">{{
                _aws_ec2_launch["instances"][0]["placement"]
              }}</a>
            short: true
          - title: Subnet
            value: >
              <a href="https://console.aws.amazon.com/vpc/home?region={{
                aws_region
              }}#subnets:filter={{
                _aws_ec2_subnet
              }}">{{
                _aws_ec2_subnet
              }}</a>
              (Type: <a href="https://console.aws.amazon.com/vpc/home?region={{
                aws_region
              }}#subnets:filter={{
                _aws_ec2_i["subnet_type"] | urlencode()
              }}">{{
                _aws_ec2_i["subnet_type"]
              }}</a>)
            short: true

          - title: Security Groups
            value: >
              {% for group in _aws_ec2_i["group"]
              %}<a href="https://console.aws.amazon.com/ec2/v2/home?region={{
                aws_region
              }}#SecurityGroups:groupName=^{{
                group
              }}$;vpcId={{
                _aws_vpc_id
              }}">{{ group }}</a>{%
              if not loop.last -%}, {% endif -%}
              {% endfor -%}
            short: false

  when: >
    notifier_role is defined and
    _aws_ec2_launch is defined and
    _aws_ec2_launch.changed
