---

- name: find network interface ID
  ec2_eni_facts:
    filters:
      'tag:Environment': '{{ _aws_ec2_i["environment"] }}'
      'tag:Name': '{{ _aws_ec2_i["function"] }}'
      vpc-id: '{{ _aws_vpc_id }}'
    profile: '{{ aws_profile }}'
    region: '{{ aws_region }}'
  register: _aws_ec2_eni_facts

- name: set network interface ID fact
  set_fact:
    _aws_ec2_eni_id: >-
      {{ _aws_ec2_eni_facts.network_interfaces[0].network_interface_id }}
  when: _aws_ec2_eni_facts.network_interfaces | length == 1

- block:

    - name: create network interface
      ec2_eni:
        profile: '{{ aws_profile }}'
        private_ip_address: '{{ _aws_ec2_i["private_ip"] | default(omit) }}'
        region: '{{ aws_region }}'
        security_groups: '{{ _aws_ec2_i["group"] }}'
        subnet_id: '{{ _aws_ec2_subnet }}'
      register: _aws_ec2_eni_create

    - name: set network interface ID fact
      set_fact:
        _aws_ec2_eni_id: '{{ _aws_ec2_eni_create.interface.id }}'

    - name: tag network interface
      ec2_tag:
      args:
        profile: '{{ aws_profile }}'
        region: '{{ aws_region }}'
        resource: '{{ _aws_ec2_eni_id }}'
        tags:
          Name: '{{ _aws_ec2_i["function"] }}'
          Environment: '{{ _aws_ec2_i["environment"] }}'
          VPC: '{{ aws_vpc_name }}'

    - name: associate Elastic IP address with network interface
      ec2_eip:
        device_id: '{{ _aws_ec2_eni_id }}'
        in_vpc: yes
        profile: '{{ aws_profile }}'
        public_ip: '{{ _aws_ec2_i["public_ip"] | default(omit) }}'
        region: '{{ aws_region }}'
      when: >
        ( _aws_ec2_i["assign_public_ip"] is defined and
          _aws_ec2_i["assign_public_ip"] ) or
        _aws_ec2_i["public_ip"] is defined

  when: _aws_ec2_eni_facts.network_interfaces | length == 0
